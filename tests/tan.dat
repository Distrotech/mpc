# Data test file for mpc_tan.

# Copyright (C) 2008 Paul Zimmermann

# This file is part of the MPC Library.
#
# The MPC Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The MPC Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the MPC Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.

# See file sin.dat for the format description.

# Special values, following ISO C99 standard, Annex G,
# more precisely Section G.6.2.6 "The ctanh functions"
# since G.6 defines ctan(z) as -i * ctanh(i*z)

# Rule [conj]: tan(conj(z)) = conj(tan(z))
# Rule [odd]:  tan(-z) = -tan(z)

# Note: for each rule, we cite the rule for tanh from C99,
#       and below the translated rule for tan, using tanh(z) = i tan(-iz),
#       thus tanh(a+i*b) = c+i*d translates to tan(b-i*a) = d-i*c

# tanh(+0 + i*0) = +0 + i*0
# tan (+0 - i*0) = +0 - i*0
2 +0 2 -0   2 +0 2 -0   N N
# [conj]: tan(+0 + i*0) =  +0 + i*0
2 +0 2 +0   2 +0 2 +0   N N
# [odd]: tan(-0 + i*0) =  -0 + i*0
2 -0 2 +0   2 -0 2 +0   N N
# [odd+conj]: tan(-0 - i*0) =  -0 - i*0
2 -0 2 -0   2 -0 2 -0   N N

# tanh(x + i*inf) = nan + i*nan for finite x
# tan (inf - i*x) = nan + i*nan for finite x
2 nan 2 nan   2  1 2 +inf   N N
2 nan 2 nan   2 +0 2 +inf   N N
2 nan 2 nan   2 -0 2 +inf   N N
2 nan 2 nan   2 -1 2 +inf   N N
# [conj] does not make sense since we already considered x < 0
# [odd]: tan(-inf + i*x) = nan + i*nan for finite x
2 nan 2 nan   2  1 2 -inf   N N
2 nan 2 nan   2 +0 2 -inf   N N
2 nan 2 nan   2 -0 2 -inf   N N
2 nan 2 nan   2 -1 2 -inf   N N

# tanh(x + i*nan) = nan + i*nan for finite x
# tan (nan + i*x) = nan + i*nan for finite x
2 nan 2 nan   2 nan 2  1    N N
2 nan 2 nan   2 nan 2 +0    N N
2 nan 2 nan   2 nan 2 -0    N N
2 nan 2 nan   2 nan 2 -1    N N
# [conj] makes no sense since we already considered x < 0
# idem for [odd] since nan has no sign

# tanh(+inf + i*y) = 1 + i*0*sin(2y) for positive-signed finite y
# tan (y - i*inf) = 0*sin(2*y) - i*1 for positive-signed finite y
2 +0 2 -1   2 1 2 -inf   N N
2 -0 2 -1   2 2 2 -inf   N N
# [conj]: tan (y + i*inf) = 0*sin(2*y) + i*1
2 +0 2 +1   2 1 2 +inf   N N
2 -0 2 +1   2 2 2 +inf   N N
# [odd]: tan (-y + i*inf) = -0*sin(2*y) + i*1
2 -0 2 +1   2 -1 2 +inf   N N
2 +0 2 +1   2 -2 2 +inf   N N
# [odd+conj]: tan (-y - i*inf) = -0*sin(2*y) - i*1
2 -0 2 -1   2 -1 2 -inf   N N
2 +0 2 -1   2 -2 2 -inf   N N

# tanh(+inf + i*inf) = 1 +/- i*0 (unspecified sign of zero for C99)
# tan (+inf - i*inf) = +/-0 - i*1
2 0 2 -1   2 +inf 2 -inf   N N
# [conj]: tan (+inf + i*inf) = +/-0 + i*1
2 0 2 +1   2 +inf 2 +inf   N N
# [odd]:  tan (-inf + i*inf) = +/-0 + i*1
2 0 2 +1   2 -inf 2 +inf   N N
# [odd+conj]: tan (-inf - i*inf) = +/-0 - i*1
2 0 2 -1   2 -inf 2 -inf   N N

# tanh(+inf + i*nan) = 1 +/- i*0 (unspecified sign of zero for C99)
# tan (nan  - i*inf) = +/-0 - i*1
2 0 2 -1   2 nan 2 -inf   N N
# [conj]: tan (nan + i*inf) = +/-0 + i*1
2 0 2 +1   2 nan 2 +inf   N N
# [odd] = [conj] since nan has no sign, and -(+/-0) = +/-0

# tanh(nan + i*0) = nan + i*0
# tan(+0 + i*nan) = +0 + i*nan
2 +0 2 nan   2 +0 2 nan   N N
# [conj] gives the same identity since nan has no sign
# [odd]: tan(-0 + i*nan) = -0 + i*nan
2 -0 2 nan   2 -0 2 nan   N N

# tanh(nan + i*y) = nan + i*nan for all nonzero y
# tan (y + i*nan) = nan + i*nan
2 nan 2 nan   2 +inf 2 nan   N N
2 nan 2 nan   2 +1   2 nan   N N
2 nan 2 nan   2 -1   2 nan   N N
2 nan 2 nan   2 -inf 2 nan   N N
# [conj] gives no new relation since nan has no sign
# [odd] gives no new relation since we already considered y < 0

# tanh(nan + i*nan) = nan + i*nan
2 nan 2 nan   2 nan 2 nan   N N

